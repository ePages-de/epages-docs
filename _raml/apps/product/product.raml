#%RAML 0.8
displayName: Products
description: |
          A collection of products of a shop.
          Note: In case of errors for certain products or unknown product IDs,
          the product collections will **not** return errors, but skip the products in question.
get:
  description: Returns a list of products.
  is: [ locale, currency, paged, direction ]
  queryParameters:
    sort:
      description: Sort products by attribute.
      enum: [name, price]
      default: name
      example: name
      required : false
    q:
      description: Filter products by query string.
      required : false
    categoryId:
      description: Filter products by category ID.
      required : false
    id:
      description: The ID of the product.<br/>

        The query parameter is repeatable up to 12 times, e.g. "?id=productId1&id=productId2&id=productId3".<br/>
        The response will return the product data in the same order as the IDs.
        Invisible, deleted or unknown products are removed from the list.<br/>

        This parameter can only be used together with the locale and currency query parameters.
        Other query parameters, such as sort, categoryId, page etc, are not supported.
      required: false
      repeat: true
  responses:
    200:
      body:
        application/json:
          example: !include examples/get_product_response.json
          schema: !include schema/get_product.schema.json
/{productId}:
  displayName: Product ID
  description: Retrieve a specific product using its ID.
  uriParameters:
    productId:
      description: The unique identifier of the product.
      example: 52F221E0-36F6-DC4E-384A-AC1504050C04
  get:
    description: Returns information for a single product. For product variations, a link
      to the respective product variations resource (rel="variations") is added.
    is: [ locale, currency ]
    responses:
      200:
        body:
          application/json:
            example: !include examples/get_product_productid_response.json
            schema: !include schema/get_product_productid.schema.json
  /variations:
    displayName: Product variations
    description: Retrieve product variations.
    get:
      is: [ locale, paged ]
      description: Returns links to product variations in a paged item list.<br/>
        "name" and "value" are used to find a matching variation for the user's selection.
        Note that the default resultsPerPage is 100 and max resultsPerPage is 1000 for this resource.
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_variations_response.json
              schema: !include schema/get_product_productid_variations.schema.json
  /slideshow:
    displayName: Product slideshow
    description: Retrieve a product slideshow.
    get:
      description: Returns links to slideshow images of a product.
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_slideshow_response.json
              schema: !include schema/get_product_productid_slideshow.schema.json
  /custom-attributes:
    displayName: User-defined product attributes
    description: Retrieve user-defined product attributes.
    get:
      is: [ locale ]
      description: Returns values of user-defined product attributes.
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_custom_response.json
              schema: !include schema/get_product_productid_custom.schema.json
  /lowest-price:
    displayName: Lowest price of product variations
    description: Retrieve the lowest price of product variations.
    get:
      is: [ locale, currency ]
      description: Returns the lowest price of all variations of a product that
        can currently be purchased.<br>
        Returns 404 Not Found if the product does not have any variation
        with an independent price, e.g. if all variations share the
        same price.
        Also depends on the shop setting to display "from" prices.
      responses:
        200:
          body:
            application/json:
              example: !include get_lowest_price_response.json
  /categories:
    displayName: Categories of a product
    description: Retrieve all categories of a product.
    get:
      is: [ locale ]
      description: Returns a list of links, i.e. self, product and categories for a product.
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_product_productid_categories_response.json
              schema: !include schema/get_product_productid_categories.schema.json
  /stock-level:
    displayName: Stock level
    description: Retrieve the stock level of a product.
    get:
      description: Returns the current stock level of a product.
      responses:
        200:
          body:
            application/json:
              example: !include get_product_stocklevel_response.json
    put:
      description: Modifies the current stock level of a product.
      body:
        application/json:
          example: !include put_product_stocklevel_request.json
      responses:
        200:
          body:
            application/json:
              example: !include get_product_stocklevel_response.json
