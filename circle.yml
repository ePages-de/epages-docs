machine:
  ruby:
    version: 2.0.0
  services:
    - docker
  environment:
    # Circle run tests with parallelism.
    CIRCLE_PARALLEL: false
    # Circle dedicated names for cached images.
    CIRCLE_ELASTICSEARCH: image_elasticsearch
    CIRCLE_NGNIX: image_ngnix
    CIRCLE_RUBY: image_ruby
    # Docker image and tag names.
    DOCKER_IMAGE_ELASTICSEARCH: docker.epages.com/epages/docs-elasticsearch
    DOCKER_IMAGE_NGINX: docker.epages.com/epages/docs-nginx
    DOCKER_IMAGE_RUBY: docker.epages.com/epages/docs-ruby
    DOCKER_IMAGE_TAG: ${CIRCLE_BRANCH//\//-}

dependencies:
  pre:
    # Print Docker environment.
    - docker info
    # Load cached images, if available.
    - if [[ -e ~/docker/${CIRCLE_ELASTICSEARCH}.tar ]]; then docker load --input ~/docker/${CIRCLE_ELASTICSEARCH}.tar; fi
    - if [[ -e ~/docker/${CIRCLE_NGNIX}.tar ]]; then docker load --input ~/docker/${CIRCLE_NGNIX}.tar; fi
    - if [[ -e ~/docker/${CIRCLE_RUBY}.tar ]]; then docker load --input ~/docker/${CIRCLE_RUBY}.tar; fi
    # Make sure circle project parallelism is set to at least 2 nodes.
    - | 
        if [[ "${CIRCLE_NODE_TOTAL}" -eq "1" ]]; then {
          echo "Parallelism [${CIRCLE_NODE_TOTAL}x] needs to be 2x to fasten execution time." 
          echo "You also need to set our circle env CIRCLE_PARALLEL [${CIRCLE_PARALLEL}] to true." 
        }; fi

test:
  override:
    - ? >
        case $CIRCLE_NODE_INDEX in
        0)
          printf "\n%s\n\n" "=== Test ngnix container for production (runs static _site) ==="
          bundle exec rake test
          docker run --name elasticsearch -p 9200:9200 -d choffmeister/elasticsearch-prefilled:latest
          # docker save choffmeister/elasticsearch-prefilled:latest > ~/docker/${CIRCLE_ELASTICSEARCH}.tar
          sleep 10
          bundle exec rake index
          sleep 10
          docker stop elasticsearch
          bundle exec rake build
          docker build -t "${DOCKER_IMAGE_NGINX}:${DOCKER_IMAGE_TAG}" -f Dockerfile.ngnix .
          # docker save "${DOCKER_IMAGE_NGINX}:${DOCKER_IMAGE_TAG}" > ~/docker/${CIRCLE_NGNIX}.tar
          printf "\n%s\n\n" "=== Archive artifacts of ngnix container ==="
          mkdir -v -p "${CIRCLE_ARTIFACTS}/${CIRCLE_NGNIX}"
          sudo mv -f ~/${CIRCLE_PROJECT_REPONAME}/_site $_
          # Exit case statement if run in parallel else proceed to next case.
          $CIRCLE_PARALLEL && exit 0
          ;&
        1)
          printf "\n%s\n\n" "=== Test ruby container for development (builds and runs static _site) ==="
          docker build -t "${DOCKER_IMAGE_RUBY}:${DOCKER_IMAGE_TAG}" -f Dockerfile.ruby .
          docker run --name develop -p 127.0.0.1:4000:4000 -it -d "${DOCKER_IMAGE_RUBY}:${DOCKER_IMAGE_TAG}"
          sleep 50
          curl --silent 127.0.0.1:4000 | grep  -q "blog" && printf "\n%s\n\n" "=== The ruby container run successfully ==="
        esac
      : parallel: true

deployment:
  dockerimages_tag_branch:
    branch:
      - master
      - develop
    commands:
      - docker login -u "${DOCKER_LOGIN_USERNAME}" -p "${DOCKER_LOGIN_PASSWORD}" -e "${DOCKER_LOGIN_EMAIL}" docker.epages.com
      # Commit changes to elasticsearch container.
      - docker commit elasticsearch "${DOCKER_IMAGE_ELASTICSEARCH}:${DOCKER_IMAGE_TAG}"
      # Push all images with branch name tags to the ePages Docker registry.
      - docker push "${DOCKER_IMAGE_ELASTICSEARCH}:${DOCKER_IMAGE_TAG}"
      - docker push "${DOCKER_IMAGE_NGINX}:${DOCKER_IMAGE_TAG}"
      - docker push "${DOCKER_IMAGE_RUBY}:${DOCKER_IMAGE_TAG}"
  dockerimages_tag_stable:
    branch: master
    commands:
      - docker login -u "${DOCKER_LOGIN_USERNAME}" -p "${DOCKER_LOGIN_PASSWORD}" -e "${DOCKER_LOGIN_EMAIL}" docker.epages.com
      # Tag with 'stable' and 'latest'.
      - docker tag "${DOCKER_IMAGE_NGINX}:${DOCKER_IMAGE_TAG}" "${DOCKER_IMAGE_NGINX}:stable"
      - docker tag "${DOCKER_IMAGE_NGINX}:${DOCKER_IMAGE_TAG}" "${DOCKER_IMAGE_NGINX}:latest"
      - docker tag "${DOCKER_IMAGE_RUBY}:${DOCKER_IMAGE_TAG}" "${DOCKER_IMAGE_RUBY}:stable"
      - docker tag "${DOCKER_IMAGE_RUBY}:${DOCKER_IMAGE_TAG}" "${DOCKER_IMAGE_RUBY}:latest"
      # Push all images tagged with 'stable' and 'latest' to the ePages Docker registry.
      - docker push "${DOCKER_IMAGE_NGINX}:stable"
      - docker push "${DOCKER_IMAGE_NGINX}:latest"
      - docker push "${DOCKER_IMAGE_RUBY}:stable"
      - docker push "${DOCKER_IMAGE_RUBY}:latest"

general:
  artifacts:
    - "${CIRCLE_ARTIFACTS}/${CIRCLE_NGNIX}"
    # "${CIRCLE_ARTIFACTS}/${CIRCLE_RUBY}"
